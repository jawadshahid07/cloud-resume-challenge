AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

Globals:
  Function:
    Timeout: 3

Resources:

  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: my-resume-website-7
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        IgnorePublicAcls: false
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred

  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z03948671ALZ4U35A32CB
      RecordSets: 
        - Name: "jawadify.xyz"
          Type: "A"
          AliasTarget: 
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:637423471197:certificate/d3e0688d-2664-41aa-8e5e-273585d394a7
          SslSupportMethod: sni-only
        Aliases:
          - jawadify.xyz
        Origins:
          - DomainName: my-resume-website-7.s3.eu-north-1.amazonaws.com
            Id: S3Origin
            S3OriginConfig:  
              OriginAccessIdentity: ''
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: S3Origin
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Enabled: true
        DefaultRootObject: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          Sid: PublicReadForGetBucketObjects
          Effect: Allow
          Principal: "*"
          Action: "s3:GetObject"
          Resource: !Join
            - ""
            - - "arn:aws:s3:::"
              - !Ref MyWebsite
              - /*
      Bucket: !Ref MyWebsite

  VisitorCountTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VisitorCountTable
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  VisitorCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      Runtime: python3.10
      CodeUri: visitorcount/
      Environment:
        Variables:
          TABLE_NAME: !Ref VisitorCountTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref VisitorCountTable
      Events:
        VisitorCountApi:
          Type: Api
          Properties:
            Path: /visitorcount
            Method: get

Outputs:
  WebsiteURL:
    Description: "URL for website"
    Value: !Sub "http://${MyWebsite}.s3-website-${AWS::Region}.amazonaws.com"